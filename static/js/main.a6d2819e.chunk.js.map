{"version":3,"sources":["components/NavBar.js","components/LeagueTable.js","components/ResultsList.js","components/Results.js","components/TitlePage.js","App.js","index.js"],"names":["NavBar","react_default","a","createElement","className","react_router_dom","to","LeagueTable","_ref","seasons","divisions","_useState","useState","_useState2","Object","slicedToArray","allData","setAllData","_useState3","_useState4","filteredData","setFilteredData","_useState5","_useState6","isLoaded","setIsLoaded","seasonsMostRecentFirst","toConsumableArray","slice","reverse","_useState7","_useState8","division","setDivision","_useState9","_useState10","season","setSeason","_useState11","_useState12","selectedSeason","setSelectedSeason","_useState13","_useState14","selectedDivision","setSelectedDivision","fetchData","fetch","concat","value","then","response","json","data","label","catch","err","console","error","useEffect","Fragment","defaultValue","onChange","e","target","map","i","key","onClick","tableInfo","src","TeamIconUrl","alt","TeamName","Matches","Won","Draw","Lost","Goals","OpponentGoals","GoalDiff","Points","ResultsList","currentPage","setCurrentPage","date","Date","thisYear","getFullYear","thisMonth","getMonth","thisDay","getDate","today","offset","currentPageData","matchInfo","MatchDateTime","Team1","MatchResults","result","PointsTeam1","PointsTeam2","Team2","length","g","GoalID","GoalGetterName","MatchMinute","ScoreTeam1","ScoreTeam2","pageCount","Math","ceil","react_paginate_default","previousLabel","nextLabel","pageRangeDisplayed","marginPagesDisplayed","onPageChange","_ref2","selectedPage","selected","pageClassName","activeClassName","Results","components_ResultsList","TitlePage","App","components_NavBar","react_router","path","element","components_TitlePage","components_Results","components_LeagueTable","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.a6d2819e.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction NavBar() {\n  return (\n    <div className=\"navbar\">\n      <NavLink to=\"bundesliga-fixtures-and-results/fixtures\" className=\"navLink\">FIXTURES</NavLink>\n      <NavLink to=\"bundesliga-fixtures-and-results/table\" className=\"navLink\">LEAGUE TABLE</NavLink>\n    </div>\n  )\n}\n\nexport default NavBar;","import React, { useState, useEffect } from 'react';\n\nfunction LeagueTable({ seasons, divisions }) {\n  const [allData,setAllData] = useState([]);\n  const [filteredData,setFilteredData] = useState(allData);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const seasonsMostRecentFirst = [...seasons].slice(-12).reverse();\n  const [division, setDivision] = useState(divisions[0]);\n  const [season, setSeason] = useState(seasonsMostRecentFirst[0]);\n  const [selectedSeason, setSelectedSeason] = useState()\n  const [selectedDivision, setSelectedDivision] = useState()\n\n  const handleDivisionChange = (e) => {\n    setDivision(divisions[e.target.value])\n  }\n  \n  const handleSeasonChange = (e) => {\n    setSeason(seasonsMostRecentFirst[e.target.value])\n  }\n    \n  const fetchData = () => {\n    fetch(`https://www.openligadb.de/api/getbltable/${division.value}/${season.value}`)\n      .then(response => response.json())\n      .then(data => {\n        setAllData(data);\n        setFilteredData(data);\n        setIsLoaded(true);\n        setSelectedSeason(season.label);\n        setSelectedDivision(division.label);\n      })\n      .catch(err => console.error(err));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [])\n\n  if (!isLoaded) return <div className='loader'></div>;\n\n  return (\n    <>\n      <div className=\"filter-table-container\">\n        <form>\n          <label>Division: </label>\n          <select\n            defaultValue={division}\n            onChange={handleDivisionChange}>\n            {divisions.map((value, i) => (\n              <option value={i} key={i}>\n                {value.label}\n              </option>\n            ))}\n          </select>\n\n          <label> Season: </label>\n          <select \n            defaultValue={season}\n            onChange={handleSeasonChange}>\n            {seasonsMostRecentFirst.map((value, i) => (\n              <option value={i} key={i}>\n                {value.label}\n              </option>\n            ))}\n          </select>\n        </form>\n        <button onClick={fetchData}>Go</button>\n      </div>\n      <div className='table'>\n        <h1>{selectedDivision}: {selectedSeason}</h1>\n        <table>\n          <thead>\n            <tr>\n              <th></th>\n              <th>CLUB</th>\n              <th>PLAYED</th>\n              <th>W</th>\n              <th>D</th>\n              <th>L</th>\n              <th>GF</th>\n              <th>GA</th>\n              <th>GD</th>\n              <th>POINTS</th>\n              </tr>\n            </thead>\n            <tbody>\n            {filteredData.map((tableInfo, i) => (\n            <tr key={i}>\n              <td><img className='team-icon' src={tableInfo.TeamIconUrl} alt=\"Club logo\"></img></td>\n              <td>{tableInfo.TeamName}</td>\n              <td>{tableInfo.Matches}</td>\n              <td>{tableInfo.Won}</td>\n              <td>{tableInfo.Draw}</td>\n              <td>{tableInfo.Lost}</td>\n              <td>{tableInfo.Goals}</td>\n              <td>{tableInfo.OpponentGoals}</td>\n              <td>{tableInfo.GoalDiff}</td>\n              <td>{tableInfo.Points}</td>\n            </tr>\n            ))} \n            </tbody> \n        </table>\n      </div>\n    </>\n  )\n}\n\nexport default LeagueTable;","import React, { useState, useEffect } from 'react';\nimport ReactPaginate from 'react-paginate';\n\nfunction ResultsList({ division, season }) {\n  const [allData, setAllData] = useState([]);\n  const [filteredData, setFilteredData] = useState(allData);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedSeason, setSelectedSeason] = useState()\n  const [selectedDivision, setSelectedDivision] = useState()\n\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const fetchData = () => {\n    fetch(`https://www.openligadb.de/api/getmatchdata/${division.value}/${season.value}`)\n      .then(response => response.json())\n      .then(data => {\n        setAllData(data);\n        setFilteredData(data);\n        setIsLoaded(true);\n        setSelectedSeason(season.label);\n        setSelectedDivision(division.label);\n      })\n      .catch(err => console.error(err));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [])\n\n  const date = new Date();\n  const thisYear = date.getFullYear()\n  const thisMonth = date.getMonth() + 1\n  const thisDay = date.getDate()\n  const today = new Date(`${thisYear}-${thisMonth}-${thisDay}`)\n\n  const resultsPerPage = 9;\n  const offset = currentPage * resultsPerPage;\n  const currentPageData = filteredData.slice(offset, offset + resultsPerPage)\n    .map(( matchInfo, i ) =>  (\n      <div className='fixtures' key={i}>\n        <div className='matchDetails'>\n          <div className='time-and-date'>\n            {matchInfo.MatchDateTime.slice(0, 10)} {matchInfo.MatchDateTime.slice(11, 16)}<br></br>\n          </div>\n          <span className='score'>\n            <img className='team-icon' src={matchInfo.Team1.TeamIconUrl} alt='club-icon'></img>\n            <h3>{matchInfo.Team1.TeamName}</h3>\n            <p> {new Date(matchInfo.MatchDateTime.slice(0, 10)) < today ? matchInfo.MatchResults.map((result) => result.PointsTeam1)[0] : \"TBC\"} : {new Date(matchInfo.MatchDateTime.slice(0, 10)) < today ? matchInfo.MatchResults.map((result) => result.PointsTeam2)[0] : \"TBC\"} </p>\n            <h3>{matchInfo.Team2.TeamName}</h3>\n            <img className='team-icon' src={matchInfo.Team2.TeamIconUrl} alt='club-icon'></img>\n          </span>\n        </div>\n\n        <ul className='expanded-content'>\n          {matchInfo.Goals.length > 0 ? \"Scorers: \" : \"\"}<br/>\n            {matchInfo.Goals.map((g) => \n              <li key={g.GoalID}>{g.GoalGetterName}, {g.MatchMinute}' <b>({(g.ScoreTeam1)}-{g.ScoreTeam2})</b><br/></li>\n            )}\n        </ul>            \n      </div>));\n          \n  const pageCount = Math.ceil(allData.length / resultsPerPage);\n\n  function handlePageClick({ selected: selectedPage }) {\n    setCurrentPage(selectedPage);\n  }\n \n  if (!isLoaded) return <div className='loader'/>;\n\n  return (\n    <div className=\"results\">\n      <button onClick={fetchData}>Go</button>\n\n      <div className=\"results-list\">\n        <h1>{selectedDivision}: {selectedSeason}</h1>\n        {currentPageData}\n        <ReactPaginate\n          previousLabel={\"<\"}\n          nextLabel={\">\"}\n          pageCount={pageCount}\n          pageRangeDisplayed={0}\n          marginPagesDisplayed={0}\n          onPageChange={handlePageClick}\n          className={\"paginate\"}\n          pageClassName={\"pageClassName\"}\n          activeClassName={\"activeClassName\"}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default ResultsList;\n\n","import ResultsList from \"./ResultsList\";\nimport React from \"react\";\nimport { useState } from \"react\";\n\nfunction Results({ divisions, seasons }) {\n\n  const seasonsMostRecentFirst = [...seasons].slice(-12).reverse();\n  const [division, setDivision] = useState(divisions[0]);\n  const [season, setSeason] = useState(seasonsMostRecentFirst[0]);\n\n  const handleDivisionChange = (e) => {\n    setDivision(divisions[e.target.value])\n  }\n\n  const handleSeasonChange = (e) => {\n    setSeason(seasonsMostRecentFirst[e.target.value])\n  }\n\n  return (\n    <div className=\"results-container\">\n      <form>\n        <label>Division: </label>\n        <select\n          defaultValue={division}\n          onChange={handleDivisionChange}>\n          {divisions.map((value, i) => (\n            <option value={i} key={i}>\n              {value.label}\n            </option>\n          ))}\n        </select>\n\n        <label> Season: </label>\n        <select \n          defaultValue={season}\n          onChange={handleSeasonChange}>\n          {seasonsMostRecentFirst.map((value, i) => (\n            <option value={i} key={i}>\n              {value.label}\n            </option>\n          ))}\n        </select>\n      </form>\n      <ResultsList division={division} season={season} />\n    </div>\n  )\n}\n\nexport default Results;","import React from \"react\"\n\nfunction TitlePage() {\n\n  return (\n    <div>\n      <img src='bundesliga_logo.png' alt=\"Bundesliga logo\" className=\"bundesliga-logo\"></img>\n      <h1 className='title-page'>FIXTURES & RESULTS</h1>\n    </div>\n  )\n}\n\nexport default TitlePage","import './App.css';\nimport React from 'react';\nimport NavBar from './components/NavBar';\nimport LeagueTable from './components/LeagueTable';\nimport { Route, Routes } from 'react-router-dom';\nimport Results from './components/Results';\nimport TitlePage from './components/TitlePage';\n\nfunction App() {\n  const divisions = [\n    { label: \"Bundesliga\", value: \"bl1\" },\n    { label: \"2. Bundesliga\", value: \"bl2\" },\n  ];\n\n  const seasons = [\n    { label: \"2003-04\", value: \"2003\" },\n    { label: \"2004-05\", value: \"2004\" },\n    { label: \"2005-06\", value: \"2005\" },\n    { label: \"2006-07\", value: \"2006\" },\n    { label: \"2007-08\", value: \"2007\" },\n    { label: \"2008-09\", value: \"2008\" },\n    { label: \"2009-10\", value: \"2009\" },\n    { label: \"2010-11\", value: \"2010\" },\n    { label: \"2011-12\", value: \"2011\" },\n    { label: \"2012-13\", value: \"2012\" },\n    { label: \"2013-14\", value: \"2013\" },\n    { label: \"2014-15\", value: \"2014\" },\n    { label: \"2015-16\", value: \"2015\" },\n    { label: \"2016-17\", value: \"2016\" },\n    { label: \"2017-18\", value: \"2017\" },\n    { label: \"2018-19\", value: \"2018\" },\n    { label: \"2019-20\", value: \"2019\" },\n    { label: \"2020-21\", value: \"2020\" },\n    { label: \"2021-22\", value: \"2021\" },\n    { label: \"2022-23\", value: \"2022\" }  \n  ];\n\n  return (\n    <div className='App'>\n      <NavBar />\n      <Routes>\n        <Route path='' element={<TitlePage />} />\n        <Route path=\"bundesliga-fixtures-and-results/fixtures\" element={<Results seasons={seasons} divisions={divisions} />} />\n        <Route path=\"bundesliga-fixtures-and-results/table\" element={<LeagueTable seasons={seasons} divisions={divisions} />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Routes } from \"react-router-dom\";\n\nconst root = createRoot(document.getElementById('root'))\n\nroot.render(\n  <Routes>\n    <App />\n  </Routes>\n)"],"sourceRoot":""}